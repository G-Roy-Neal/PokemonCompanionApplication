Index: src/test/java/edu/bsu/cs/BasicInfoFormatterTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.bsu.cs;\r\n\r\nimport edu.bsu.cs.basicinfo.BasicInfo;\r\nimport edu.bsu.cs.basicinfo.BasicInfoReader;\r\nimport edu.bsu.cs.basicinfo.BasicInfoFormatter;\r\nimport org.junit.jupiter.api.Assertions;\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class BasicInfoFormatterTest {\r\n    @Test\r\n    public void testFormatName() throws IOException {\r\n        BasicInfo basicInfo = initilizeRaltsData();\r\n        BasicInfoFormatter infoFormatter = new BasicInfoFormatter(basicInfo);\r\n        String formattedName = infoFormatter.formatName();\r\n        Assertions.assertEquals(\"Ralts\", formattedName);\r\n    }\r\n\r\n    @Test\r\n    public void testFormatTypesForRalts() throws IOException {\r\n        BasicInfo basicInfo = initilizeRaltsData();\r\n        BasicInfoFormatter infoFormatter = new BasicInfoFormatter(basicInfo);\r\n        String formattedTypes = infoFormatter.formatTypes();\r\n        Assertions.assertEquals(\"Psychic, Fairy\", formattedTypes);\r\n    }\r\n\r\n    @Test\r\n    public void testFormatTypesForCharmander() throws IOException {\r\n        BasicInfo basicInfo = initilizeCharmanderData();\r\n        BasicInfoFormatter infoFormatter = new BasicInfoFormatter(basicInfo);\r\n        String formattedTypes = infoFormatter.formatTypes();\r\n        Assertions.assertEquals(\"Fire\", formattedTypes);\r\n    }\r\n\r\n    @Test\r\n    public void testFormatHeight() throws IOException {\r\n        BasicInfo basicInfo = initilizeRaltsData();\r\n        BasicInfoFormatter infoFormatter = new BasicInfoFormatter(basicInfo);\r\n        String formattedHeight = infoFormatter.formatHeight();\r\n        Assertions.assertEquals(\"0.4 m\", formattedHeight);\r\n    }\r\n\r\n    @Test\r\n    public void testFormatWeight() throws IOException {\r\n        BasicInfo basicInfo = initilizeRaltsData();\r\n        BasicInfoFormatter infoFormatter = new BasicInfoFormatter(basicInfo);\r\n        String formattedWeight = infoFormatter.formatWeight();\r\n        Assertions.assertEquals(\"6.6 Kg\", formattedWeight);\r\n    }\r\n\r\n    @Test\r\n    public void testFormatBasicInfo() throws IOException {\r\n        BasicInfo basicInfo = initilizeRaltsData();\r\n        BasicInfoFormatter infoFormatter = new BasicInfoFormatter(basicInfo);\r\n        List<String> formattedInfo = infoFormatter.formatInfo();\r\n        List<String> expectedList = new ArrayList<>();\r\n        expectedList.add(\"Ralts\");\r\n        expectedList.add(\"Psychic, Fairy\");\r\n        expectedList.add(\"0.4 m\");\r\n        expectedList.add(\"6.6 Kg\");\r\n        Assertions.assertEquals(expectedList, formattedInfo);\r\n    }\r\n\r\n    public BasicInfo initilizeRaltsData() throws IOException {\r\n        InputStream testingData = Thread.currentThread().getContextClassLoader().getResourceAsStream(\"ralts-test.json\");\r\n        assert testingData != null;\r\n        BasicInfoReader infoBuilder = new BasicInfoReader(testingData);\r\n        return infoBuilder.buildBasicInfo();\r\n    }\r\n\r\n    public BasicInfo initilizeCharmanderData() throws IOException {\r\n        InputStream testingData = Thread.currentThread().getContextClassLoader().getResourceAsStream(\"charmander-test.json\");\r\n        assert testingData != null;\r\n        BasicInfoReader infoBuilder = new BasicInfoReader(testingData);\r\n        return infoBuilder.buildBasicInfo();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/edu/bsu/cs/BasicInfoFormatterTest.java b/src/test/java/edu/bsu/cs/BasicInfoFormatterTest.java
--- a/src/test/java/edu/bsu/cs/BasicInfoFormatterTest.java	(revision 694cf6babe86c0d8191bab806489fe40e006ebd4)
+++ b/src/test/java/edu/bsu/cs/BasicInfoFormatterTest.java	(date 1639087606986)
@@ -50,6 +50,7 @@
         BasicInfoFormatter infoFormatter = new BasicInfoFormatter(basicInfo);
         String formattedWeight = infoFormatter.formatWeight();
         Assertions.assertEquals("6.6 Kg", formattedWeight);
+
     }
 
     @Test
Index: src/test/java/edu/bsu/cs/UrlBuilderTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.bsu.cs;\r\n\r\nimport edu.bsu.cs.query.UrlBuilder;\r\nimport org.junit.jupiter.api.Assertions;\r\nimport org.junit.jupiter.api.Test;\r\n\r\npublic class UrlBuilderTest {\r\n\r\n    @Test\r\n    public void testBuildUrl() {\r\n        UrlBuilder builder = new UrlBuilder();\r\n        String result = builder.buildSearchUrl(\"Ralts\");\r\n        Assertions.assertEquals(\"https://pokeapi.co/api/v2/pokemon/ralts\", result);\r\n    }\r\n\r\n    @Test\r\n    public void testBuildUrl2() {\r\n        UrlBuilder builder = new UrlBuilder();\r\n        String result = builder.buildSearchUrl(\"Mr. Mime\");\r\n        Assertions.assertEquals(\"https://pokeapi.co/api/v2/pokemon/mr-mime\", result);\r\n    }\r\n\r\n    @Test\r\n    public void testBuildImageUrl() {\r\n        UrlBuilder builder = new UrlBuilder();\r\n        String result = builder.buildImageUrl(\"Ralts\");\r\n        Assertions.assertEquals(\"https://assets.pokemon.com/assets/cms2/img/pokedex/full/ralts.png\", result);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/edu/bsu/cs/UrlBuilderTest.java b/src/test/java/edu/bsu/cs/UrlBuilderTest.java
--- a/src/test/java/edu/bsu/cs/UrlBuilderTest.java	(revision 694cf6babe86c0d8191bab806489fe40e006ebd4)
+++ b/src/test/java/edu/bsu/cs/UrlBuilderTest.java	(date 1639087780442)
@@ -3,21 +3,20 @@
 import edu.bsu.cs.query.UrlBuilder;
 import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
+import org.junit.jupiter.params.ParameterizedTest;
+import org.junit.jupiter.params.provider.CsvSource;
 
 public class UrlBuilderTest {
 
-    @Test
-    public void testBuildUrl() {
+    @ParameterizedTest
+    @CsvSource ({
+                "Ralts, https://pokeapi.co/api/v2/pokemon/ralts",
+                "Mr. Mime, https://pokeapi.co/api/v2/pokemon/mr-mime"
+            })
+    public void testBuildPokemonUrl(String pokemon, String url) {
         UrlBuilder builder = new UrlBuilder();
-        String result = builder.buildSearchUrl("Ralts");
-        Assertions.assertEquals("https://pokeapi.co/api/v2/pokemon/ralts", result);
-    }
-
-    @Test
-    public void testBuildUrl2() {
-        UrlBuilder builder = new UrlBuilder();
-        String result = builder.buildSearchUrl("Mr. Mime");
-        Assertions.assertEquals("https://pokeapi.co/api/v2/pokemon/mr-mime", result);
+        String result = builder.buildSearchUrl(pokemon);
+        Assertions.assertEquals(url, result);
     }
 
     @Test
Index: src/main/java/edu/bsu/cs/basicinfo/BasicInfoEngine.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.bsu.cs.basicinfo;\r\n\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.util.List;\r\n\r\npublic class BasicInfoEngine {\r\n    public List<String> getBaisicInfo(InputStream inputData) throws IOException {\r\n        BasicInfoReader infoBuilder = new BasicInfoReader(inputData);\r\n        BasicInfoFormatter infoFormatter = new BasicInfoFormatter(infoBuilder.buildBasicInfo());\r\n        return infoFormatter.formatInfo();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/edu/bsu/cs/basicinfo/BasicInfoEngine.java b/src/main/java/edu/bsu/cs/basicinfo/BasicInfoEngine.java
--- a/src/main/java/edu/bsu/cs/basicinfo/BasicInfoEngine.java	(revision 694cf6babe86c0d8191bab806489fe40e006ebd4)
+++ b/src/main/java/edu/bsu/cs/basicinfo/BasicInfoEngine.java	(date 1639085502722)
@@ -5,7 +5,7 @@
 import java.util.List;
 
 public class BasicInfoEngine {
-    public List<String> getBaisicInfo(InputStream inputData) throws IOException {
+    public List<String> getBasicInfo(InputStream inputData) throws IOException {
         BasicInfoReader infoBuilder = new BasicInfoReader(inputData);
         BasicInfoFormatter infoFormatter = new BasicInfoFormatter(infoBuilder.buildBasicInfo());
         return infoFormatter.formatInfo();
Index: src/main/java/edu/bsu/cs/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.bsu.cs;\r\n\r\nimport edu.bsu.cs.basicinfo.BasicInfoEngine;\r\nimport edu.bsu.cs.image.ImageBuilder;\r\nimport edu.bsu.cs.query.QueryEngine;\r\nimport javafx.application.Application;\r\nimport javafx.application.Platform;\r\nimport javafx.geometry.HPos;\r\nimport javafx.geometry.Pos;\r\nimport javafx.geometry.VPos;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.ColumnConstraints;\r\nimport javafx.scene.layout.GridPane;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.RowConstraints;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.text.FontPosture;\r\nimport javafx.scene.text.FontWeight;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\npublic class App extends Application {\r\n    private final Font labelFont = Font.font(\"Verdana\", FontWeight.BOLD, 16);\r\n    private final Font dataFont = Font.font(\"Verdana\", FontPosture.ITALIC, 12);\r\n\r\n    private final QueryEngine queryEngine = new QueryEngine();\r\n    private final ImageBuilder imageBuilder = new ImageBuilder();\r\n    private final BasicInfoEngine basicInfoEngine = new BasicInfoEngine();\r\n    private final InformationWindow window = new InformationWindow();\r\n    private TextField userInput;\r\n    private Label pokemonName;\r\n    private Label pokemonHeight;\r\n    private Label pokemonType;\r\n    private Label pokemonWeight;\r\n    private TextField pokemonNameOutput;\r\n    private TextField pokemonHeightOutput;\r\n    private TextField pokemonTypeOutput;\r\n    private TextField pokemonWeightOutput;\r\n    private ImageView imageView = null;\r\n    private Button searchButton;\r\n    private Button locationButton;\r\n    private Button movesButton;\r\n    private Button typeButton;\r\n\r\n    ScrollPane outPutDataScrollPane = new ScrollPane();\r\n\r\n    HBox querySearchButtonBox = new HBox();\r\n    HBox infoSelectorBox = new HBox();\r\n    HBox pokemonNameBox = new HBox();\r\n    HBox pokemonHeightBox = new HBox();\r\n    HBox pokemonWeightBox = new HBox();\r\n    HBox pokemonTypeBox = new HBox();\r\n    GridPane grid = new GridPane();\r\n\r\n    @Override\r\n    public void start(Stage primaryStage) {\r\n        Scene scene = new Scene(createLocationsGUI());\r\n        primaryStage.setTitle(\"Brilliant Diamond & Shining Pearl Companion App\");\r\n        primaryStage.setScene(scene);\r\n        primaryStage.sizeToScene();\r\n        primaryStage.setOnShown(e ->\r\n                outPutDataScrollPane.lookup(\".viewport\").setStyle(\"-fx-background-color: azure;\"));\r\n        primaryStage.show();\r\n\r\n        primaryStage.setOnCloseRequest(event -> {\r\n            Platform.exit();\r\n            System.exit(0);\r\n        });\r\n    }\r\n\r\n    public App() {\r\n        initializeSearchComponents();\r\n        initializeBasicInfoTextFields();\r\n        initializePokeballImage();\r\n        setDataLabels();\r\n    }\r\n\r\n    private void setActionEvents() {\r\n        searchButton.setOnAction(event -> queryTask(userInput.getText()));\r\n        userInput.setOnAction(event -> queryTask(userInput.getText()));\r\n        userInput.setOnMouseClicked(event -> userInput.clear());\r\n        setInfoButtonEvents();\r\n    }\r\n\r\n    private void setInfoButtonEvents() {\r\n        locationButton.setOnAction(event -> locationButtonEvent());\r\n        movesButton.setOnAction(event -> moveButtonEvent());\r\n        typeButton.setOnAction(event -> typeButtonEvent());\r\n    }\r\n\r\n    private void locationButtonEvent() {\r\n        try {\r\n            window.setLocation();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void moveButtonEvent(){\r\n        try {\r\n            window.setMoves();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void typeButtonEvent(){\r\n        try {\r\n            window.setDamageRelations();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void initializePokeballImage() {\r\n        Image image;\r\n        image = new Image(Objects.requireNonNull(Thread.currentThread().getContextClassLoader().getResourceAsStream(\"pokeball-clipart-silhouette-5.png\")));\r\n        imageView = new ImageView(image);\r\n    }\r\n\r\n    private void initializeSearchComponents() {\r\n        userInput = new TextField(\"Search\");\r\n        userInput.setFont(Font.font(16));\r\n        searchButton = new Button(\"\\uD83D\\uDD0E\");\r\n        searchButton.setFont(labelFont);\r\n        initializeInfoButtons();\r\n    }\r\n\r\n    private void initializeInfoButtons(){\r\n        locationButton = new Button(\"Locations\");\r\n        locationButton.setFont(labelFont);\r\n        movesButton = new Button(\"Moves\");\r\n        movesButton.setFont(labelFont);\r\n        typeButton = new Button(\"Types\");\r\n        typeButton.setFont(labelFont);\r\n    }\r\n\r\n    private void setDataLabels(){\r\n        pokemonName = new Label(\"Name: \");\r\n        pokemonHeight = new Label(\"Height: \");\r\n        pokemonType = new Label(\"Type: \");\r\n        pokemonWeight = new Label(\"Weight: \");\r\n        setDataLabelFont();\r\n    }\r\n\r\n    private void setDataLabelFont(){\r\n        pokemonName.setFont(labelFont);\r\n        pokemonHeight.setFont(labelFont);\r\n        pokemonType.setFont(labelFont);\r\n        pokemonWeight.setFont(labelFont);\r\n    }\r\n\r\n    private void initializeBasicInfoTextFields() {\r\n        pokemonNameOutput = new TextField();\r\n        pokemonHeightOutput = new TextField();\r\n        pokemonWeightOutput = new TextField();\r\n        pokemonTypeOutput = new TextField();\r\n        disableEditingBasicInfoTextFields();\r\n    }\r\n\r\n    private void disableEditingBasicInfoTextFields () {\r\n        pokemonNameOutput.setEditable(false);\r\n        pokemonHeightOutput.setEditable(false);\r\n        pokemonWeightOutput.setEditable(false);\r\n        pokemonTypeOutput.setEditable(false);\r\n    }\r\n\r\n    private Parent createLocationsGUI() {\r\n        grid.setPrefSize(1080, 720);\r\n        grid.setStyle(\"-fx-background-color: azure;\");\r\n\r\n        alignUiBoxes();\r\n        addElementsToUiBoxes();\r\n        addElementsToGrid();\r\n        createColumnConstraints();\r\n        createRowConstraints();\r\n        scaleImage();\r\n        scaleUiElements();\r\n        setActionEvents();\r\n\r\n        return grid;\r\n    }\r\n\r\n    private void alignUiBoxes() {\r\n        pokemonNameBox.alignmentProperty().setValue(Pos.CENTER);\r\n        pokemonHeightBox.alignmentProperty().setValue(Pos.CENTER);\r\n        pokemonWeightBox.alignmentProperty().setValue(Pos.CENTER);\r\n        pokemonTypeBox.alignmentProperty().setValue(Pos.CENTER);\r\n        infoSelectorBox.alignmentProperty().setValue(Pos.CENTER);\r\n        querySearchButtonBox.alignmentProperty().setValue(Pos.CENTER);\r\n    }\r\n\r\n    private void addElementsToUiBoxes() {\r\n        querySearchButtonBox.getChildren().addAll(userInput, searchButton);\r\n        pokemonNameBox.getChildren().addAll(pokemonName, pokemonNameOutput);\r\n        pokemonHeightBox.getChildren().addAll(pokemonHeight, pokemonHeightOutput);\r\n        pokemonWeightBox.getChildren().addAll(pokemonWeight, pokemonWeightOutput);\r\n        pokemonTypeBox.getChildren().addAll(pokemonType, pokemonTypeOutput);\r\n        infoSelectorBox.getChildren().addAll(locationButton, movesButton, typeButton);\r\n        outPutDataScrollPane.setStyle(\"-fx-background-color: azure;\");\r\n        window.setStyle(\"-fx-background-color: azure;\");\r\n        outPutDataScrollPane.setContent(window);\r\n    }\r\n\r\n    private void scaleNameHeightWeightTypeBoxes () {\r\n        pokemonNameOutput.prefWidthProperty().bind(pokemonNameBox.widthProperty().multiply(.5));\r\n        pokemonHeightOutput.prefWidthProperty().bind(pokemonHeightBox.widthProperty().multiply(.5));\r\n        pokemonWeightOutput.prefWidthProperty().bind(pokemonWeightBox.widthProperty().multiply(.5));\r\n        pokemonTypeOutput.prefWidthProperty().bind(pokemonTypeBox.widthProperty().multiply(.5));\r\n    }\r\n\r\n    private void addElementsToGrid() {\r\n        grid.add(infoSelectorBox, 2,0,2,1);\r\n        grid.add(outPutDataScrollPane, 2,1,2,3);\r\n        grid.add(querySearchButtonBox, 0,0,2,1);\r\n        grid.add(imageView, 0,1,2,1);\r\n        grid.add(pokemonNameBox, 0,2,1,1);\r\n        grid.add(pokemonTypeBox, 0,3,1,1);\r\n        grid.add(pokemonHeightBox, 1,2,1,1);\r\n        grid.add(pokemonWeightBox, 1,3,1,1);\r\n    }\r\n\r\n    private void createColumnConstraints() {\r\n        ColumnConstraints columnWidthConstraint = new ColumnConstraints();\r\n        columnWidthConstraint.setPercentWidth(25);\r\n        columnWidthConstraint.setHalignment(HPos.CENTER);\r\n        grid.getColumnConstraints().addAll(columnWidthConstraint, columnWidthConstraint, columnWidthConstraint, columnWidthConstraint);\r\n    }\r\n\r\n    private void createRowConstraints() {\r\n        RowConstraints smallRowConstraint = new RowConstraints();\r\n        RowConstraints largeRowConstraint = new RowConstraints();\r\n        smallRowConstraint.setValignment(VPos.CENTER);\r\n        smallRowConstraint.setPercentHeight(5);\r\n        largeRowConstraint.setPercentHeight(85);\r\n        grid.getRowConstraints().addAll(smallRowConstraint, largeRowConstraint, smallRowConstraint, smallRowConstraint);\r\n    }\r\n\r\n    private void scaleImage () {\r\n        imageView.setPreserveRatio(true);\r\n        imageView.fitHeightProperty().bind(outPutDataScrollPane.heightProperty().multiply(.85));\r\n        imageView.fitWidthProperty().bind(outPutDataScrollPane.widthProperty().multiply(.85));\r\n    }\r\n\r\n    private void scaleUiElements () {\r\n        scaleImage();\r\n        scaleNameHeightWeightTypeBoxes();\r\n        infoSelectorBox.prefWidthProperty().bind(outPutDataScrollPane.widthProperty());\r\n        userInput.prefWidthProperty().bind(outPutDataScrollPane.widthProperty().subtract(searchButton.widthProperty()));\r\n        locationButton.prefWidthProperty().bind(infoSelectorBox.widthProperty().divide(3));\r\n        movesButton.prefWidthProperty().bind(infoSelectorBox.widthProperty().divide(3));\r\n        typeButton.prefWidthProperty().bind(infoSelectorBox.widthProperty().divide(3));\r\n    }\r\n\r\n\r\n    private void queryTask (String text) {\r\n        checkIfEmpty();\r\n        disableEditing();\r\n        InputStream inputData;\r\n        try {\r\n            inputData = queryEngine.getInputStream(text);\r\n            ByteArrayOutputStream temporaryByteArray = new ByteArrayOutputStream();\r\n            inputData.transferTo(temporaryByteArray);\r\n            InputStream firstClone = new ByteArrayInputStream(temporaryByteArray.toByteArray());\r\n            imageView.setImage(imageBuilder.getPokemonImage(imageBuilder.getPokemonId(firstClone)));\r\n            InputStream secondClone = new ByteArrayInputStream(temporaryByteArray.toByteArray());\r\n            setBasicInfo(secondClone);\r\n            InputStream thirdClone = new ByteArrayInputStream(temporaryByteArray.toByteArray());\r\n            window.loadData(thirdClone);\r\n            window.setLocation();\r\n        } catch (IOException e) {\r\n            window.setPokemonNotFound();\r\n        }\r\n        enableEditing();\r\n    }\r\n        private void setBasicInfo (InputStream fourthClone) throws IOException {\r\n            List<String> infoList = basicInfoEngine.getBaisicInfo(fourthClone);\r\n            pokemonNameOutput.setText(infoList.get(0));\r\n            pokemonTypeOutput.setText(infoList.get(1));\r\n            pokemonHeightOutput.setText(infoList.get(2));\r\n            pokemonWeightOutput.setText(infoList.get(3));\r\n            setBasicInfoFont();\r\n        }\r\n\r\n        private void setBasicInfoFont () {\r\n            pokemonNameOutput.setFont(dataFont);\r\n            pokemonTypeOutput.setFont(dataFont);\r\n            pokemonHeightOutput.setFont(dataFont);\r\n            pokemonWeightOutput.setFont(dataFont);\r\n        }\r\n\r\n        private void enableEditing () {\r\n            userInput.setEditable(true);\r\n            searchButton.setDisable(false);\r\n        }\r\n\r\n        private void disableEditing () {\r\n            userInput.setEditable(false);\r\n            searchButton.setDisable(true);\r\n\r\n        }\r\n\r\n        private void checkIfEmpty () {\r\n            if (userInput.getText().equals(\"\")) {\r\n                enableEditing();\r\n            }\r\n        }\r\n    }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/edu/bsu/cs/App.java b/src/main/java/edu/bsu/cs/App.java
--- a/src/main/java/edu/bsu/cs/App.java	(revision 694cf6babe86c0d8191bab806489fe40e006ebd4)
+++ b/src/main/java/edu/bsu/cs/App.java	(date 1639085502711)
@@ -284,7 +284,7 @@
         enableEditing();
     }
         private void setBasicInfo (InputStream fourthClone) throws IOException {
-            List<String> infoList = basicInfoEngine.getBaisicInfo(fourthClone);
+            List<String> infoList = basicInfoEngine.getBasicInfo(fourthClone);
             pokemonNameOutput.setText(infoList.get(0));
             pokemonTypeOutput.setText(infoList.get(1));
             pokemonHeightOutput.setText(infoList.get(2));
